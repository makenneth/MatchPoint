CREATE TABLE clubs (
  id MEDIUMINT NOT NULL AUTO_INCREMENT,
  password_digest VARCHAR(50) NOT NULL,
  session_token VARCHAR(32) NOT NULL,
  short_id CHAR(10) NOT NULL,
  username VARCHAR(40) NOT NULL,
  club_name VARCHAR(80) NOT NULL,
  email VARCHAR(255) NOT NULL,
  verified TINYINT(1) DEFAULT 0,
  token VARCHAR(50) NOT NULL,
  confirm_token VARCHAR(50) NOT NULL,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_on DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE (short_id)
);

CREATE TABLE club_geolocations (
  id MEDIUMINT NOT NULL AUTO_INCREMENT,
  club_id MEDIUMINT NOT NULL,
  city VARCHAR(50),
  state CHAR(2),
  address TEXT,
  geolat decimal(10, 6),
  geolng decimal(10, 6),
  PRIMARY KEY (id),
  FOREIGN KEY (club_id)
    REFERENCES clubs (id)
    ON DELETE CASCADE,
  KEY geolat (geolat),
  KEY geolng (geolng)
);

CREATE TABLE club_players (
  id MEDIUMINT NOT NULL AUTO_INCREMENT,
  club_id MEDIUMINT NOT NULL,
  player_id INT NOT NULL,
  FOREIGN KEY (club_id)
    REFERENCES clubs (id)
    ON DELETE CASCADE,
  FOREIGN KEY (player_id)
    REFERENCES players (id)
    ON DELETE CASCADE,
  PRIMARY KEY (id)
);

CREATE TABLE players (
  id INT NOT NULL AUTO_INCREMENT,
  short_id CHAR(10) NOT NULL,
  usatt_url VARCHAR(255),
  rating SMALLINT DEFAULT 0,
  name VARCHAR(126) NOT NULL,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_on DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE (short_id)
);

CREATE TABLE player_histories (
  id MEDIUMINT NOT NULL UNIQUE,
  player_id INT NOT NULL,
  rating_change SMALLINT NOT NULL,
  new_rating SMALLINT NOT NULL,
  created_on DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (player_id) REFERENCES players (id) ON DELETE CASCADE,
  PRIMARY KEY (player_id, id)
);

CREATE TABLE roundrobins (
  id INT NOT NULL AUTO_INCREMENT,
  club_id MEDIUMINT NOT NULL,
  date DATETIME NOT NULL,
  short_id CHAR(10) NOT NULL,
  finalized TINYINT(1) DEFAULT 0,
  num_players SMALLINT NOT NULL,
  selected_schema JSON,
  results JSON,
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (short_id),
  FOREIGN KEY (club_id) REFERENCES clubs (id),
  PRIMARY KEY (id)
);

CREATE TABLE roundrobin_players (
  id MEDIUMINT NOT NULL,
  player_id INT NOT NULL,
  roundrobin_id INT NOT NULL,
  group_id TINYINT NOT NULL,
  pos TINYINT NOT NULL,
  FOREIGN KEY (player_id) REFERENCES players (id),
  FOREIGN KEY (roundrobin_id) REFERENCES roundrobins (id),
  PRIMARY KEY (roundrobin_id, id)
);

DELIMITER $$
CREATE TRIGGER ensure_players_club_id BEFORE INSERT ON club_players
FOR EACH ROW BEGIN
    SET NEW.id = (
       SELECT IFNULL(MAX(id), 0) + 1
       FROM issue_log
       WHERE club_id  = NEW.club_id
    );
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER ensure_roundrobin_player_id BEFORE INSERT ON roundrobin_players
FOR EACH ROW BEGIN
    SET NEW.id = (
       SELECT IFNULL(MAX(id), 0) + 1
       FROM issue_log
       WHERE roundrobin_id  = NEW.roundrobin_id
    );
END $$
DELIMITER ;
