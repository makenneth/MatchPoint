http {
  log_format requestlog escape=json '{ "remote_addr": $remote_addr, "remote_user": $remote_user, "local_time": [$time_local] '
      '"request": "$request", "status": $status, "body_byte_sent": $body_bytes_sent, '
      '"http_referer": "$http_referer", "http_user_agent": "$http_user_agent", "request_time": $request_time }'
}

upstream api_server {
  server 127.0.0.1:3000;
}

upstream kibana_server {
  server 127.0.0.1:5601;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name matchpoints.org www.matchpoints.org;
  ssl_session_cache    shared:SSL:10m;
  gzip on;
  gzip_types *;
  gzip_proxied any;
  # listen [::]:443 ssl default_server;
  location / {
          proxy_pass       https://api_server/;
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /kibana {
          proxy_pass       https://kibana_server/;
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/matchpoints.org/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/matchpoints.org/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  access_log /var/log/nginx/server.log bodylog


  if ($scheme != "https") {
      return 301 https://$host$request_uri;
  } # managed by Certbot
}
